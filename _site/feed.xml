<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ROOFTOP HERO</title>
    <description></description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 21 Oct 2020 13:58:43 +0900</pubDate>
    <lastBuildDate>Wed, 21 Oct 2020 13:58:43 +0900</lastBuildDate>
    <generator>Jekyll v4.1.1</generator>

    
      <item>
        <title>Front End 유용한 사이트 모음</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Web 개발 중 디자인 측면에서 유용한 사이트들을 정리해 보았습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;w3schoolscom&quot;&gt;W3Schools.com&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
모두가 다 알고 있는 웹페이지를 구성하는 HTML, CSS, Javascript 기초를 Step by Step으로 학습할 수 있는 곳입니다. Python이나 PHP등 다른 언어도 학습할 수 있으나 우리들의 뇌리에는 HTML과 CSS가 깊이 각인되어 있지요. 
&lt;br /&gt;
&lt;br /&gt;
&lt;a href=&quot;https://www.w3schools.com/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;https://www.w3schools.com/&lt;/strong&gt;&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/2020-10-21/www.w3schools.com_.png&quot; alt=&quot;www.w3schools.com_.png&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;boostrap&quot;&gt;Boostrap&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
Bootsrap 웹을 쉽게, 그리고 반응형(Responsive)으로 디자인 할 수 있도록 하는 툴킷입니다. 
무료 Bootstrap 템플릿은  &lt;a href=&quot;https://themewagon.com/theme_tag/free/&quot; target=&quot;_blank&quot;&gt;여기&lt;/a&gt;에서 다운로드할 수 있습니다.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;a href=&quot;https://getbootstrap.com/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;https://getbootstrap.com/&lt;/strong&gt;&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/2020-10-21/getbootstrap.com_.png&quot; alt=&quot;getbootstrap.com_.png&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;codepenio&quot;&gt;Codepen.io&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
이곳도 모르는 사람이 없죠. 웹린이가 Bootstrap 템플릿에서 헤매다 codepen.io을 파헤치며 마침내 무림의 고수로 성장한다는 전설이 깃든 곳입니다.
&lt;br /&gt;
&lt;br /&gt;
&lt;a href=&quot;https://codepen.io/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;https://codepen.io/&lt;/strong&gt;&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/2020-10-21/codepen.io_.png&quot; alt=&quot;codepen.io_.png&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;chrome-devtools&quot;&gt;Chrome DevTools&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
웹개발의 필수툴입니다. 크롬 개발자도구 없는 웹개발이 가능할까요?
&lt;br /&gt;
&lt;br /&gt;
&lt;a href=&quot;https://www.youtube.com/watch?v=2Sp9rGmQsBA&amp;amp;list=PLuHgQVnccGMB-cpwPv6dIcvW6DnZzWM4f&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;생활코딩 크롬 개발자도구 강의&lt;/strong&gt;&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
이 페이지에서 사용한 스크린샷도 &lt;a href=&quot;https://junwoo45.github.io/2020-07-28-chrome_devtools/&quot; target=&quot;_blank&quot;&gt;크롬 개발자도구를 사용해&lt;/a&gt; 찍었습니다. 
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;무료-사진-사이트&quot;&gt;무료 사진 사이트&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://unsplash.com/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Unsplash.com&lt;/strong&gt;&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/2020-10-21/unsplash.com_s_photos_desk.png&quot; alt=&quot;unsplash.com_s_photos_desk.png&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;a href=&quot;https://isorepublic.com/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;ISO Republic&lt;/strong&gt;&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/2020-10-21/isorepublic.com_.png&quot; alt=&quot;isorepublic.com_.png&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;a href=&quot;https://www.pexels.com/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Pexels.com&lt;/strong&gt;&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/2020-10-21/www.pexels.com_ko-kr_.png&quot; alt=&quot;www.pexels.com_ko-kr_.png&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;a href=&quot;https://pixabay.com/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;pixabay.com&lt;/strong&gt;&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/2020-10-21/pixabay.com_.png&quot; alt=&quot;pixabay.com_.png&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;무료-icon&quot;&gt;무료 Icon&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;a href=&quot;https://ionicons.com/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Ionicons&lt;/strong&gt;&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/2020-10-21/ionicons.com_.png&quot; alt=&quot;ionicons.com_.png&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;a href=&quot;https://thenounproject.com/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;The noun project&lt;/strong&gt;&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/2020-10-21/thenounproject.com_.png&quot; alt=&quot;thenounproject.com_.png&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;색상조합&quot;&gt;색상조합&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;a href=&quot;https://color.adobe.com/ko/explore&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;color.adobe.com&lt;/strong&gt;&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/2020-10-21/color.adobe.com_.png&quot; alt=&quot;color.adobe.com_.png&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;a href=&quot;https://www.colorcombos.com/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;colorcombos.com&lt;/strong&gt;&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/2020-10-21/www.colorcombos.com_.png&quot; alt=&quot;www.colorcombos.com_.png&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;font&quot;&gt;Font&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;a href=&quot;https://fonts.google.com/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Google Fonts&lt;/strong&gt;&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/2020-10-21/fonts.google.com_.png&quot; alt=&quot;fonts.google.com_.png&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;a href=&quot;https://www.dafont.com/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Dafont&lt;/strong&gt;&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/2020-10-21/www.dafont.com_.png&quot; alt=&quot;www.dafont.com_.png&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;material-design&quot;&gt;Material Design&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
머티리얼 디자인은 통해 그들의 플랫폼과 서비스가 제공하는 모든 것들이 하나의 통일된 사용자 경험을 줄 수 있도록 함을써 일관적인 브랜딩(Branding)을 가능하게 합니다. 머티리얼 디자인이 왜 필요한가는 &lt;a href=&quot;http://media.fastcampus.co.kr/insight/branding-google/&quot; target=&quot;_blank&quot;&gt;이 글&lt;/a&gt;을 읽어보시기 바랍니다.
&lt;br /&gt;
&lt;br /&gt;
&lt;a href=&quot;https://material.io/design/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Google Material Design&lt;/strong&gt;&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/2020-10-21/material.io_design_.png&quot; alt=&quot;material.io_design_.png&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;a href=&quot;https://www.microsoft.com/design/fluent/#/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Microsoft Fluent Design&lt;/strong&gt;&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/2020-10-21/www.microsoft.com_design_fluent_.png&quot; alt=&quot;www.microsoft.com_design_fluent_.png&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;etc&quot;&gt;ETC&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
마이크로소프트의 웹기반 솔루션으로, 유저 인터페이스를 그린 종이를 사진을 찍어 업로드 하면 딥러닝이 자동으로 디자인 패턴을 탐지하여 해당 HTML 컴퍼넌트로 변환하며, 사용자는 HTML코드를 다운로드할 수 있습니다.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://sketch2code.azurewebsites.net/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Sketch2Code&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2020-10-21/sketch2code.azurewebsites.net_.png&quot; alt=&quot;sketch2code.azurewebsites.net_.png&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
마지막으로 웹디자이너가 참고할 사이트는 &lt;a href=&quot;http://designbase.co.kr/%EC%9B%B9%EB%94%94%EC%9E%90%EC%9D%B8%ED%95%98%EA%B8%B0-%EC%A0%84%EC%97%90-%EC%B0%B8%EA%B3%A0%ED%95%B4%EC%95%BC-%ED%95%A0-%EC%82%AC%EC%9D%B4%ED%8A%B8-%EB%AA%A8%EC%9D%8C/&quot; target=&quot;_blank&quot;&gt;이곳&lt;/a&gt;에 잘 정리되어 있습니다.&lt;/p&gt;

</description>
        <pubDate>Wed, 21 Oct 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2020/10/21/Front-End-Useful-Sites</link>
        <guid isPermaLink="true">http://localhost:4000/2020/10/21/Front-End-Useful-Sites</guid>
      </item>
    
      <item>
        <title>Pandas Dataframe에서 SQL 사용하기</title>
        <description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;pandasql을 이용하여 Pandas Dataframe 데이터를 가공합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;일반 프로그래밍 언어가 아닌 SAS, R과 같은 통계패키지로 시작했습니다. SAS에는 data set이 있고, R에는 data.frame이 있습니다. Java에서는 데이터프레임에 대응되는 개념이 없고 대신 POJO(Plain Old Java Object)를 사용해서 당혹스러웠습니다. 다행히도(?) Python에는 Pandas에서 만든 Dataframe이 있습니다.&lt;/p&gt;

&lt;p&gt;Pandas의 Dataframe은 강력하지만 조건이나 집계를 한다든지 하는 기능은 불편합니다. 다소 부족하지만 SAS는 proc sql, R에서는 &lt;a href=&quot;https://cran.r-project.org/web/packages/sqldf/index.html&quot; target=&quot;_blank&quot;&gt;sqldf&lt;/a&gt;이라는 데이터프레임을 SQL로 조작하는 기능을 제공합니다.&lt;/p&gt;

&lt;p&gt;비슷한 기능을 Pandas Dataframe을 사용해 구현해보았습니다. 본격적으로 SQL문을 parsing 하지 않는 한, 한계가 명확합니다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;typing&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Vector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;pdsql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SELECT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Vector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Vector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WHERE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Vector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDER_BY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
    Return dataframe with condition of SQL

    Parameters
    ----------
    SELECT : list of columns. ['*'] is all column
    FROM : source dataframe
    WHERE : list of where condition
    ORDER_BY : list of order by

    Returns
    -------
    queried result
&quot;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;isinstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;'FROM' type should be Pandas Dataframe&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;isinstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WHERE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;'WHERE' type should be List&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WHERE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;_condition&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_str&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WHERE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;_keyword&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'or'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'and'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&amp;gt;='&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;lt;='&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'!='&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;lt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'='&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;_pair&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'or'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'|'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'and'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;amp;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

                &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_keyword&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;cond&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'or'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'and'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;cond&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'='&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'=='&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;cond&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;_condition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;( FROM['&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cond&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;']&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cond&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cond&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;) &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
                        &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'or'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'and'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;_condition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_pair&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;        
                        
                        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_condition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),:]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDER_BY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;isinstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDER_BY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;'ORDER_BY' type should be List&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;_sort&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'asc'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'True'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'desc'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'False'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;ORDER_BY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDER_BY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDER_BY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDER_BY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDER_BY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDER_BY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ascending&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDER_BY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDER_BY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDER_BY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ORDER_BY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ascending&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;isinstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SELECT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;'SELECT' type should be List&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SELECT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SELECT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SELECT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

            
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'emp.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pdsql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SELECT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pdsql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SELECT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ENAME'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pdsql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SELECT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ENAME'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SAL'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pdsql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SELECT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WHERE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sal &amp;gt; 1000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;and&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;depno=30&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pdsql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SELECT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WHERE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sal &amp;gt; 1000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;and&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;depno=30&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;or&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;job='SALESMAN'&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pdsql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SELECT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WHERE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sal &amp;gt; 1000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;and&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;depno=30&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;or&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;job='SALESMAN'&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDER_BY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'job'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'sal'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'desc'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;그러다 &lt;a href=&quot;https://pypi.org/project/pandasql/&quot; target=&quot;_blank&quot;&gt;pandasql&lt;/a&gt;을 발견했습니다.
&lt;br /&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.sqlite.org/lang.html&quot; target=&quot;_blank&quot;&gt;sqlite의 SQL문법&lt;/a&gt;을 지원합니다.
분석을 해보니 원리는 다음과 같습니다.
&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;SQLAlchemy에서 sqlite의 메모리 DB를 한시적으로 생성한다&lt;/li&gt;
    &lt;li&gt;python envrionment에서 locals()이나 globals()로 해당 dataframe을 찾아 메모리 DB에 테이블로 올린다.&lt;/li&gt;
    &lt;li&gt;SQL문으로 데이터를 추출한다.&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;약간의 트릭을 사용했지만 발상의 전환으로 거의 완전한 SQL로 데이터프레임을 조작할 수 있도록 했습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Package를 설치합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install -U pandasql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;globals()로 환경을 일괄적으로 지정하는 방법은 다음과 같습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandasql&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sqldf&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dfsql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sqldf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;globals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;예제&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandasql&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sqldf&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dfsql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sqldf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;globals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'emp.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dept&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dept.csv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dfsql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;select * from emp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dfsql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;select * from emp where sal &amp;gt; 2000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dfsql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;select * from emp where mgr = '7839' order by sal asc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dfsql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;select ename, job, mgr, sal from emp where sal &amp;gt; 2000 order by sal desc, ename asc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dfsql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
                select e.job, sum(sal) as sum_sal, avg(sal) as avg_sal, max(sal) as max_sal, min(sal) as min_sal
                from emp e inner join dept d 
                on e.depno = d.deptno
                where d.loc='DALLAS'
                group by e.job
                order by e.job desc
            &quot;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;dfsql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
                select e.job, sum(sal) as sum_sal, avg(sal) as avg_sal, max(sal) as max_sal, min(sal) as min_sal
                from emp e inner join dept d 
                on e.depno = d.deptno
                where d.loc='DALLAS'
                group by e.job
                order by e.job desc
            &quot;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'sal_job.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;orient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'table'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
예제와 데이터는 &lt;a href=&quot;https://github.com/rakjido/PandasSQL.git&quot; target=&quot;_blank&quot;&gt;여기&lt;/a&gt;에 있습니다.&lt;/p&gt;

</description>
        <pubDate>Mon, 12 Oct 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2020/10/12/Pandas-Dataframe-Minipulation-using-SQL</link>
        <guid isPermaLink="true">http://localhost:4000/2020/10/12/Pandas-Dataframe-Minipulation-using-SQL</guid>
      </item>
    
      <item>
        <title>Docker로 Flask를 build하고 배포하기</title>
        <description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;초간단 Flask 웹서버를 Docker로 빌드하고 실행합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;먼저 가상화 환경을 만듭니다. 
&lt;a href=&quot;/2019/09/30/How-to-exectue-Python-VirtualEnv-in-VSCODE&quot; target=&quot;_blank&quot;&gt;VSCODE에서 Python VirtualEnv 실행하기&lt;/a&gt;를 참조하세요.&lt;/p&gt;

&lt;p&gt;위의 폴더 안에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;requirement.txt&lt;/code&gt;를 만듭니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flask
flask_cors
uwsgi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;flask_cors : flask에서 교차 출처 리소스 공유(Cross-Origin Resourcing Sharing : CORS) 문제를 해결합니다.&lt;/li&gt;
  &lt;li&gt;uwsgi : Flask의 내장서버인 werkzeug서버는 단일스레드이며 테스트용도 이외에는 적합하지 않으며 대신 uWSGI서버를 사용할 수 있습니다. 윈도10에서는 현재까지는 사용할 수 없습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install -r requirement.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;app.py&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;flask&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonify&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;flask_cors&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CORS&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CORS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Hello, world'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'exharo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;no&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;203&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
다음과 같이 실행합니다.
&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export FLASK_APP=app.py
flask run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
플라스크에서 애플리케이션의 default name은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app&lt;/code&gt;이며, 이 경우 export FLASK_APP 지정을 생략할 수 있습니다.
&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FLASK_DEBUG=1 flask run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
FLASK_DEBUG=1 옵션을 줄 경우 내용을 수정하고 저장할 경우 서버가 자동으로 reload 됩니다
&lt;br /&gt;
&lt;a href=&quot;http://127.0.0.1:5000/&quot; target=&quot;_blank&quot;&gt;http://127.0.0.1:5000/&lt;/a&gt;에 접속해서 정상적으로 작동하는지 확인합니다.
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/2020-07-04/result.jpeg&quot; alt=&quot;result.jpeg&quot; width=&quot;100%&quot; height=&quot;50%&quot; class=&quot;center&quot; /&gt;
&lt;br /&gt;
&lt;strong&gt;uwsgi.ini&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[uwsgi]
http = : 5000
wsgi-file = app.py
single-interpreter = true
enable-threads = true
master = true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
port를 5000으로 설정했습니다.
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;app.py&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;flask&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonify&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;flask_cors&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CORS&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CORS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Hello, world'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'exharo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;no&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;203&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;application&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
uWSGI에서의 default name은 application입니다. 그래서 마지막줄에 application = app 추가했습니다.
&lt;br /&gt;
uWSGI server는 다음과 같이 실행합니다.
&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;uwsgi --ini uwsgi.ini
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
Dockerfile을 다음과 같이 만듭니다.
&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FROM python:3.6.4

COPY . /app

WORKDIR /app 

RUN pip install -r requirement.txt

CMD [&quot;uwsgi&quot;, &quot;uwsgi.ini&quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
정리하면 파일구성은 다음과 같습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2020-07-04/tree.jpeg&quot; alt=&quot;tree.jpeg&quot; width=&quot;100%&quot; height=&quot;80%&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker build -t test_flask_docker .
docker container run -p 8080:5000 -it test_flask_docker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;a href=&quot;http://127.0.0.1:8080/&quot; target=&quot;_blank&quot;&gt;http://127.0.0.1:8080/&lt;/a&gt;에 접속해서 정상적으로 작동하는 것을 확인합니다.&lt;/p&gt;

&lt;hr /&gt;

</description>
        <pubDate>Sat, 04 Jul 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2020/07/04/How-to-build-delpoy-flask-with-docker</link>
        <guid isPermaLink="true">http://localhost:4000/2020/07/04/How-to-build-delpoy-flask-with-docker</guid>
      </item>
    
      <item>
        <title>Ubuntu 14.04에서 Spring web을 tomcat에서 실행하기</title>
        <description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Spring Web을 git을 통해 받아 maven으로 build한 후, tomcat에서 실행합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이 글은 Ubuntu 14.04.6 LTS를 기준으로 작성되었습니다. GCP, Godo Cloud등 클라우드 서비스에 동일하게 적용할 수 있습니다. 또한 &lt;a href=&quot;https://www.44bits.io/ko/post/wsl2-install-and-basic-usage&quot; target=&quot;_blank&quot;&gt;Windows10에 적용된 WSL2하의 Ubuntu 20.04.1 LTS&lt;/a&gt;에서도 문제없이 작동합니다.&lt;/p&gt;

&lt;h3 id=&quot;1-jdk-18-설치&quot;&gt;1. JDK 1.8 설치&lt;/h3&gt;

&lt;p&gt;default로 JDK 1.7이 설치되어 있을 경우 다음과 같이 제거합니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get remove openjdk*
sudo apt-get autoremove --purge
sudo apt-get autoclean
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
오라클이 java 8에 대한 지원을 중단하여 다음과 같이 Open JDK 1.8을 설치합니다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo add-apt-repository ppa:openjdk-r/ppa
sudo apt-get update
sudo apt-get install openjdk-8-jdk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-mavan-설치&quot;&gt;2. Mavan 설치&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt install maven
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;3-tomcat-설치&quot;&gt;3. tomcat 설치&lt;/h3&gt;

&lt;p&gt;tomcat도 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt-get install tomcat9&lt;/code&gt;와 같이 설치할 수 있으나 여기서는 파일을 다운로드해서 설치하는 방법으로 진행합니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir apps
chmod 755 apps
mkdir Downloads
chmod 755 Downloads
cd ~/Downloads
wget https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.12/bin/apache-tomcat-9.0.12.tar.gz
gunzip apache-tomcat-9.0.12.tar.gz
tar -xvf apache-tomcat-9.0.12.tar
sudo mv apache-tomcat-9.0.12/ ~/apps
cd ~/apps
sudo ln -s apache-tomcat-9.0.12/ tomcat
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install vim
cd ~/
sudo vi .bash_profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
.bash_profile에 다음과 같이 추가합니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export TOMCAT_HOME=~/apps/tomcat
export PATH=$PATH:$TOMCAT_HOME/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;source .bash_profile
cd apps/tomcat/bin
./startup.sh           	# tomcat 구동
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;http://[해당cloud의 ip주소]:8080에서 확인합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2020-01-30/tomcat.JPG&quot; alt=&quot;tomcat.JPG&quot; width=&quot;100%&quot; height=&quot;100%&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
tomcat을 중단합니다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./shutdown.sh          	# tomcat 중단
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;4-git-설치&quot;&gt;4. git 설치&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install git​​
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
respositories폴더를 만든 후 간단한 Spring MVC Framwork 예제인 
&lt;a href=&quot;https://github.com/rakjido/testSpring.git&quot; target=&quot;_blank&quot;&gt;https://github.com/rakjido/testSpring.git&lt;/a&gt;을 git clone하여 maven으로 테스트합니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd ~
mkdir repositories
chmod 755 repositories/
cd repositories/
git clone https://github.com/rakjido/testSpring.git
cd testSpring
mvn clean package
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
BUILD SUCESS가 됨을 확인합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2020-01-30/maven.jpeg&quot; alt=&quot;maven.jpeg&quot; width=&quot;100%&quot; height=&quot;100%&quot; class=&quot;center&quot; /&gt;
&lt;br /&gt;
생성된 war파일을 tomcat밑의 webapps에 ROOT.war로 저장합니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd target
cp Web-1.0.0-BUILD-SNAPSHOT.war ~/apps/tomcat/webapps/
cd ~/apps/tomcat/webapps/
rm -rf ROOT ROOT.war
mv Web-1.0.0-BUILD-SNAPSHOT.war ROOT.war
cd ../bin/
./startup.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
http://[해당cloud의 ip주소]:8080에서 확인합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2020-01-30/spring_web.JPG&quot; alt=&quot;spring_web.JPG&quot; width=&quot;100%&quot; height=&quot;100%&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
</description>
        <pubDate>Thu, 30 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2020/01/30/Spring-web-development-on-ubuntu</link>
        <guid isPermaLink="true">http://localhost:4000/2020/01/30/Spring-web-development-on-ubuntu</guid>
      </item>
    
      <item>
        <title>쉐어헤어샵도 등장!!</title>
        <description>&lt;p&gt;2020년 1월 6일에 &lt;a href=&quot;https://shairspot.com/&quot; target=&quot;_blank&quot;&gt;쉐어스팟&lt;/a&gt;이라는 쉐어헤어샵서비스가 오픈했습니다. 퓨처플레이라는 테크 전문 투자사가 만든 자회사가 운영하는 미용실로 헤어디자이너가 작은 방을 쉐어할 수 있도록 디자인되었습니다. 방은 헤어디자이너가 마음대로 꾸밀 수 있고 예약은 네이버 예약시스템을, 결제는 디자이너가 직접 합니다.&lt;/p&gt;

&lt;p&gt;쉐어헤어샵은 &lt;a href=&quot;https://github.com/rakjido/TeamHair&quot; target=&quot;_blank&quot;&gt;TeamHair (https://github.com/rakjido/TeamHair)&lt;/a&gt;라는 Model 2 JSP 기반의 토이 프로젝트로 진행한 경헙이 있습니다. 인스타그램과 같은 SNS와 WeWork 모델의 결합을 시도했습니다. 관련문서는 &lt;a href=&quot;https://github.com/rakjido/TeamHair/blob/master/doc/TeamHair.pdf&quot; target=&quot;_blank&quot;&gt;여기에&lt;/a&gt; 있습니다.&lt;/p&gt;

&lt;p&gt;기존 헤어샵에서는 부원장과 같은 분들이 일정 정도 임대료를 부담하고 매출을 어떤 비율로 가져간다고 알고 있는데, 매출을 전부 헤어디자이너가 가져간다는 점이 차별화요소입니다. 다만, 소비자가 이 곳을 특별히 찾을 메리트가 있는지 검토할 필요가 있을 듯 합니다.&lt;/p&gt;

</description>
        <pubDate>Thu, 16 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2020/01/16/Advent-of-Share-Hairshop</link>
        <guid isPermaLink="true">http://localhost:4000/2020/01/16/Advent-of-Share-Hairshop</guid>
      </item>
    
      <item>
        <title>AI가 코딩을 하기 시작했다</title>
        <description>&lt;p&gt;2020년 기준, 코딩에 AI를 접목하는 사례는 크게 다음과 같이 구분할 수 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;1-코드의-자동완성을-제시&quot;&gt;1. 코드의 자동완성을 제시&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;VS Code의 Snippet같은 기능에 AI를 적용해서 개발자의 코드나 Github들의 repository에서 패턴을 학습하여 좀더 적합한 키워드를 제시합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://kite.com/&quot; target=&quot;_blank&quot;&gt;Kite&lt;/a&gt;&lt;/strong&gt;는 VS code, Sublime Text, Pycharm, Atom, Vim에서 플러그인을 통해, 머신러닝을 이용해 파이썬 코드를 완성을 도와주는 툴입니다. 기존의 코드제시(Snippet)와 비슷하지만 차이점은 사용자의 코드에서 사용한 패턴을 탐지해서 가장 관련성이 높은 순으로 제시합니다. 현재는 파이썬만 가능하지만 다른 언어도 사용가능하게 할 예정이라 합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.deepcode.ai/&quot; target=&quot;_blank&quot;&gt;DeepCode&lt;/a&gt;&lt;/strong&gt;는 open-source 코드에서 학습하여 코드를 개선하는 제안을 하는 AI 소프트웨어입니다. 개발자는 이 플랫폼을 코드리뷰나 검사툴로 사용할 수 있습니다. 사용자에게 코드상의 취약점을 알려줍니다. Visual Studio Code에 &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=DeepCode.deepcode&quot; target=&quot;_blank&quot;&gt;DeepCode extension&lt;/a&gt;을 추가해 사용할 수 있습니다. 그리고 DeepCode는 Github, Gitlab, Bitbucket과 같은 플랫폼과 결합하여 사용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.jetbrains.com/pycharm/&quot; target=&quot;_blank&quot;&gt;PyCharm&lt;/a&gt;&lt;/strong&gt;은 널리 사용되는 있는 파이쎤 IDE로, 코드 자동완성, 코드 검사, 자동화된 코드 리팩토링 등을 제공합니다.&lt;/p&gt;

&lt;h4 id=&quot;2-devops에-적용&quot;&gt;2. DevOps에 적용&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;DevOps에서 테스트 , 이슈탐지등에 우선 주력하면서 점차 DevOps 전반으로 확장 적용될 것으로 예상됩니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.embold.io/&quot; target=&quot;_blank&quot;&gt;Embold&lt;/a&gt;&lt;/strong&gt;는 Github등의 respositry내의 소스코드를 스캔하여 소프트웨어 품질, 이슈 탐지 및 솔루션 제시를 하는 다차원 분석툴입니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.mabl.com/&quot; target=&quot;_blank&quot;&gt;mabl&lt;/a&gt;&lt;/strong&gt;은 머신러닝 기반의 테스트 자동화를 수행하는 통합 DevTestOps 플랫폼입니다. 이 서비스는 Sass(Software-as-a-Service)의 형태로 제공됩니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.run.ai/&quot; target=&quot;_blank&quot;&gt;Run.ai&lt;/a&gt;&lt;/strong&gt;은 딥러닝 가상화 및 가속화 툴입니다. 값비싼 GPU 자원을 최대한 사용할 수 있도록, 컴퓨팅 자원을 가상자원풀(virtual pool)로 특정 인프라에만 과부하가 걸리지 않도록 데이터와 모델을 자동으로 분산하여 트레이닝을 합니다. 그 상태 및 성과를 시각적으로 확인할 수 있어 사용자가 적은 비용으로 보다 빠르게 컴퓨팅 작업을 수행할 수 있도록 합니다. 2019년 1300만불의 시리즈 A 투자를 받았습니다.&lt;/p&gt;

&lt;p&gt;이런 형태는 쿠버네티스에서 컨테이너(또는 Pod)를 마이크로서비스로 배포하면서 그 자원을 로드밸런싱하는 하는 등, 쿠버네티스의 전반적 관리에도 적용할 수 있을 듯 합니다.&lt;/p&gt;

&lt;h4 id=&quot;3-화면생성&quot;&gt;3. 화면생성&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://sketch2code.azurewebsites.net/&quot; target=&quot;_blank&quot;&gt;Sketch2Code&lt;/a&gt;&lt;/strong&gt; 마이크로소프트의 웹기반 솔루션으로, 유저 인터페이스를 그린 종이를 사진을 찍어 업로드 하면 자동으로 디자인 패턴을 탐지하여 해당 HTML 컴퍼넌트로 변환해 줍니다. 사용자는 그 HTML코드를 다운로드할 수 있습니다.&lt;/p&gt;

&lt;p&gt;화면을 만들 수 있으면 데이터베이스 테이블도 만들 수 있습니다. 개발자가 테이블 컬럼을 조금 수정하는 형태로 기본적인 웹 마이크로서비스 CRUD는 생성하는 단계까지 예상보다 이른 시일내에 가능하리라 예상됩니다.&lt;/p&gt;

</description>
        <pubDate>Wed, 08 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2020/01/08/AI-Started-Coding</link>
        <guid isPermaLink="true">http://localhost:4000/2020/01/08/AI-Started-Coding</guid>
      </item>
    
      <item>
        <title>우아한 테크 세미나 - 그럭저럭 돌아가는 서비스 만들기 후기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/posts/2019-10-28/elegant_navigation.jpg&quot; alt=&quot;elegant-navigation.jpg&quot; width=&quot;50%&quot; height=&quot;50%&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그럭저럭 돌아가는 서비스 만들기 세미나는 두 부분으로 나누어 진행되었습니다.&lt;/p&gt;

&lt;p&gt;첫번째는 중국의 편리한 결제 상황, 둘째는 마이크로서비스를 구성한 사례에 관한 이야기입니다.&lt;/p&gt;

&lt;p&gt;한국에서는 요즘 Kiosk를 도입하고 있는데 주문 하나 하려면 스무고개를 넘어야 합니다. 반면 중국은 테이블에 있는 QR코드를 찍어 주문하고 결제하면 끝나고 주문 알람도 핸드폰으로 온다고 합니다. 김형준 CTO에 의하면 한국에서의 서비스가 불편한 이유는 어떤 제품이나 서비스를 사용할 때마다 별도의 앱을 설치하고 사용자 인증하고 결제도 등록해야 하는데 중국의 위챗은 사업자들이 mini program을 등록할 수 있습니다. 이 경우 위챗에서 사용자인증과 결제가 가능하므로 사업자는 HTML, JS만 사용해서 mini program만 구현해서 배포하면 됩니다. 즉, 위챗과 알리페이 정도가 사실상의 결제 표준이 되었기 때문에 seamless한 결제가 가능해 집니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2019-10-28/ordinary_life_service.jpg&quot; alt=&quot;elegant-navigation.jpg&quot; width=&quot;70%&quot; height=&quot;70%&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.popit.kr/wechat-mini-program-%EA%B3%84%EC%A0%95-%EB%A7%8C%EB%93%A4%EA%B8%B0/&quot; target=&quot;_blank&quot;&gt;WeChat Mini Program(小程序) 개발 계정 만들기&lt;/a&gt; 참조&lt;/p&gt;

&lt;p&gt;정리하면 중국에서 지갑없이 하루종일 자연스러운 생활이 가능한 이유는 다음과 같습니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 혁신적인 서비스의 파급효과가 미국이나 일본같은 국가보다 중국이나 러시아와 같은 국가에서 강하게 나타나는 이유는 기존에 해당 서비스가 없었기 때문이다.
2. 인터넷서비스에서 텐센트와 알리바바가 독과점 체제를 형성하고 있다.
3. weChat의 mini program와 같은 방식이 가능한 이유는 구글이나 애플이 중국내에서 영향력이 약하기 때문이다. 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;인상적인 부분은 weChat에서 mini program이 1년만에 100만개가 등록되었다 하는데,  weChat은 생태계를 만들어가는 공공재의 역할을 어느 정도 하고 있다는 것입니다.&lt;/p&gt;

&lt;p&gt;한국은 결제서비스의 춘추전국시대입니다. 어떤 사이트나 서비스를 이용할 때마다 어떨 때는 네이버페이, 어떨 때는 스마일페이 등, 카드를 쓸 때도 PG들의 복잡한 프로그램이나 개별 은행앱을 사용해야 합니다. 그 이유는 기존 사업자들의 이해관계가 복잡하게 얽혀있고, 결제 서비스가 ‘Winner takes it all’이 될 수 있기 때문입니다. 적어도 자신의 비즈니스 영역을 지키기 위해서라도 필사적일 수 밖에 없습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
주요 결제서비스에 대해서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;사실상의 표준화&lt;/code&gt;를 인정하는 대신 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;일정 수준의 공공성&lt;/code&gt;을 충족하도록 하는 방안이 필요하다 생각합니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;두번째 이야기는 마이크로서비스와 애자일의 실제 사례입니다.&lt;/p&gt;

&lt;p&gt;중국내 매출이 500억인 어느 한국회사의 중국서비스는 테이블만 675개였다 합니다.&lt;/p&gt;

&lt;p&gt;윈도환경하의 기존 시스템을 대체하기 위해 마이크로서비스와 애자일을 도입하였습니다.&lt;/p&gt;

&lt;p&gt;(중국은 점심시간 2시간이어서 낮잠을 1시간 잔다는데 생산성 향상을 위한 중요한 포인트가 아닐까 생각합니다.)&lt;/p&gt;

&lt;p&gt;개발자가 시스템이나 리눅스등을 잘 모르므로 클라우드와 kubernetes로 개발환경을 구성하고 개발자들의 개발역량이 높지 않아 개발자당 테이블 하나를 구현하는 방식으로 마이크로서비스를 구축했다 합니다. 부족하거나 아쉬운 부분은 다시 구현하는 식으로 애자일이 적용되었습니다.&lt;/p&gt;

&lt;p&gt;인상적인 부분은 다음과 같습니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 마이크로 서비스는 Transaction을 쓸 수 없다. 그럼 rollback은 어떻게 하느가 질문했더니 하지 않는답니다. 그 대신 Event Queue로 하는 관리가 중요하다 합니다. 
2. 마이크로 서비스는 JOIN없이 중복테이블을 만들거나 Service call을 통해 사용한다. 중복 테이블은 필요한 경우 snapshop을 써서 JSON으로 전달하여 통합성을 유지한다.
3. 애자일은 실수에 대한 용인이 필요하다. 따라서 경영진이 개발자를 문책하지 않고 그 실수의 결과를 받아들일 수 있는 자세가 중요하다. 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;해당 개발자의 업무 내용이 단순화되는 대신 그 통합성을 유지하기 위한 관리는 복잡해질 것입니다. 마이크로 서비스는 개발의 outsourcing이나 API startup의 활성화로 이어질 수도 있을 듯 합니다.&lt;/p&gt;

</description>
        <pubDate>Mon, 28 Oct 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2019/10/28/Microservice-playground</link>
        <guid isPermaLink="true">http://localhost:4000/2019/10/28/Microservice-playground</guid>
      </item>
    
      <item>
        <title>Tensorflow Korea 3차 오프라인 모임 후기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/posts/2019-10-23/Screenshot_2019-10-20-12-48-01-1.png&quot; alt=&quot;tensorflow-3rd.png&quot; width=&quot;70%&quot; height=&quot;70%&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;펀드매니저들은 수익성이 높은 투자전략을 만들려 합니다. 하지만 자산운용사는 운용자금을 모아서 운용을 하면서 수수료 수입을 얻지요. 위험과 수익률을 고려해서 자산운용사는 펀드매니저에게 자원을 배분합니다. 수많은 펀드매니저들이 진입하고, 퇴출되는 동안 자산운용사는 변함없이 운용자금을 모으고 수수료 수입을 얻습니다.&lt;/p&gt;

&lt;p&gt;데이터는 돈, AI는 투자전략과 유사합니다. 투자전략의 최적화도 중요하지만 운용자금을 모으는 것에도 염두에 두어야 한다 생각합니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;프로덕션 환경에서 연구하기&lt;/code&gt;에서도 머신러닝이 항상 성과를 내는 것을 아님을 인지하고 제품이나 회사에 어느정도 기여할 수 있는지에 대한 고민이 필요함을 이야기하고 있습니다.&lt;/p&gt;

&lt;p&gt;Edge TPU와 TFLite는 구글이 반도체와 IoT에 진입하기 위한 포석으로 보입니다. &lt;a href=&quot;https://www.zdnet.co.kr/view/?no=20180726080217&quot; target=&quot;_blank&quot;&gt;보도&lt;/a&gt;에 의하면 분산처리와 데이터를 클라우드로 보내는 역할을 한다 합니다. AI는 중기적으로는 클라우드에, 장기적으로는 반도체로 수렴할 것으로 예측됩니다. (삼성전자 주식을 사야 할까요?)&lt;/p&gt;

&lt;p&gt;딥러닝은 일종의 implicit한 quasi-optimization 방법론이라 볼 수 있기 때문에 수리통계에 대한 지식이 Critical하지는 않지만, 모델링이나 효율성 향상에 중요한 역할을 합니다. 예를 들어 backpropagration 방법론은 computing 시간을 경이롭게 줄여줍니다. 이런 수리적인 이슈들은 어느 정도 현재 나오는 모델들에 이미 반영되어 있기에 주요 이슈들은 프로그래밍이나 computing에서 발생하고 있는 듯 합니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Auto scalable한 DL production을 위한 Service infra 구성 및 AI DevOpts Cycle&lt;/code&gt;에서는 Docker와 Kubernetes 및 CPU를 사용한 Scale up한 사례를 제시했는데 무척 흥미로왔습니다.&lt;/p&gt;

&lt;p&gt;텐서플로우를 연구하기 위한 로드맵을 찾기에 오프라인 모임은 매우 유익했습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sjchoi86/dl_tutorials&quot; target=&quot;_blank&quot;&gt;Deep Learning Tutorial&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;주요 논문을 파악할 수 잇는 &lt;a href=&quot;https://www.youtube.com/watch?v=auKdde7Anr8&amp;amp;list=PLWKf9beHi3Tg50UoyTe6rIm20sVQOH1br&quot; target=&quot;_blank&quot;&gt;PR12모임&lt;/a&gt;. 논문 리뷰가 200편이 넘었다는군요!&lt;/p&gt;

&lt;p&gt;3차모임 발표자료는 &lt;a href=&quot;https://m.facebook.com/groups/255834461424286?view=permalink&amp;amp;id=1015286128812445&quot; target=&quot;_blank&quot;&gt;이곳&lt;/a&gt;에 있습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2019-10-23/20191020_130607.jpg&quot; alt=&quot;tensorflow-3rd.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; class=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;정성 들여 준비해주신 운영진 분들께 감사드립니다.&lt;/p&gt;

</description>
        <pubDate>Wed, 23 Oct 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2019/10/23/Review-of-Tensor-flow-korea-3rd-Seminar</link>
        <guid isPermaLink="true">http://localhost:4000/2019/10/23/Review-of-Tensor-flow-korea-3rd-Seminar</guid>
      </item>
    
      <item>
        <title>Python에서 xml을 이용한 mysql 설정하기</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;데이터베이스 설정 정보를 xml로 분리해 보자&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Python에서 데이터베이스 설정 정보를 config.xml 파일로 별도로 설정해 보았습니다.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;Config&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;DATABASE&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;host&amp;gt;&lt;/span&gt;localhost&lt;span class=&quot;nt&quot;&gt;&amp;lt;/host&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;port&amp;gt;&lt;/span&gt;3306&lt;span class=&quot;nt&quot;&gt;&amp;lt;/port&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;userid&amp;gt;&lt;/span&gt;user&lt;span class=&quot;nt&quot;&gt;&amp;lt;/userid&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;password&amp;gt;&lt;/span&gt;password&lt;span class=&quot;nt&quot;&gt;&amp;lt;/password&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;db&amp;gt;&lt;/span&gt;db&lt;span class=&quot;nt&quot;&gt;&amp;lt;/db&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/DATABASE&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Config&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;config.xml에서 데이터베이스 정보를 가져와서 접속하고 query를 실행할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;xml.etree.ElementTree&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elemTree&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pymysql&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt; 

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;db_connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elemTree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./config.xml'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getroot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dbinfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./DATABASE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dbinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./port'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;userid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./userid'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./password'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./db'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pymysql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                            &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;autocommit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cursorclass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pymysql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cursors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DictCursor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;BaseException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;DB connection Error&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pymysql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cursors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DictCursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;db_select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fetchall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;db_insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;db_update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;db_delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다음과 같이 사용할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
            DELETE FROM EQUITY_INFO
            WHERE EQUITY_CODE='AMZN'
            &quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
            INSERT INTO EQUITY_INFO (EQUITY_CODE, EQUITY_NAME, EXCHANGE_CODE, CURRENCY_CODE)
            VALUES('AMZN', 'Kingkong', 'SP500', 'USD')
            &quot;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;db_insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
            UPDATE EQUITY_INFO 
            SET EQUITY_NAME = 'Amazon.com Inc'
            WHERE EQUITY_CODE='AMZN'
            &quot;&quot;&quot;&lt;/span&gt;


    &lt;span class=&quot;n&quot;&gt;db_update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;select * from equity_info&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Mon, 14 Oct 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2019/10/14/Mysql-setting-using-XML-in-Python</link>
        <guid isPermaLink="true">http://localhost:4000/2019/10/14/Mysql-setting-using-XML-in-Python</guid>
      </item>
    
      <item>
        <title>&lt;함께 자라기 애자일로 가는 길&gt;을 읽고</title>
        <description>&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;예전 프로젝트를 할 때 어떤 사람이 설계한 API를 자신과 친한 팀원을 제외하고 공유하지 않은 적이 있습니다. 그 결과 프로젝트는 몇달 지연되었고, 회사도 잘 되지 않았다는 슬픈 이야기&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788966262335&amp;amp;orderClick=LAG&amp;amp;Kc=#N&quot;&gt;&lt;img src=&quot;/images/posts/agile_together.jpg&quot; alt=&quot;텍스트&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이 책은 딱딱하게 애자일을 정의하고 방법론을 소개하는 것이 아닌 ‘함께 성장하는 틀’로 애자일을 이야기합니다.&lt;/p&gt;

&lt;p&gt;프로그래밍에서 성과와의 관련성은 학력이나 경력보다는 작업샘플테스트, 지능테스트, 성실함등이 훨씬 높다 합니다. 경력과의 연관성은 신입에서 몇년간은 꽤 높으나 그 이후는 별로 차이가 없는 것은 일반적인 프로그래밍 업무에서 요구하는 수준은 어느 정도 도달하기 때문일 것입니다. 요즘 기업들이 입사시험으로 &lt;a href=&quot;https://www.hackerrank.com&quot;&gt;hackerrank&lt;/a&gt;등의 테스트를 하는 것은 이런 연구 결과가 배경인 듯 합니다.&lt;/p&gt;

&lt;p&gt;개인적으로는 기업이 원하는 포지션의 수준을 만족하는 ‘미니 TASK’를 제시하는 것이 가장 바람직하다 생각합니다. ‘미니 TASK’는 기업이 원하는 포지션의 로드맵도 제시하는 효과가 있어 결과적으로 그 포지션에 대한 공급도 용이해지고, 지원자도 기업이 무엇을 원하는 것을 알 수 있어 시행착오를 줄일 수 있습니다.&lt;/p&gt;

&lt;p&gt;가장 인상적인 부분은 개선에 관한 이야기입니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A 작업은 본래 그 조직이 하기로 되어 있는 일을 하는 것이다. 예를 들면 제품을 만드는 것에 해당한다.&lt;/li&gt;
  &lt;li&gt;B 작업은 A 작업을 개선하는 것. 예를 들면 제품을 만드는 공정의 시간을 단축하고 품질을 개선하는 것이다.&lt;/li&gt;
  &lt;li&gt;C 작업은 B 작업을 개선하는 것. 즉, 개선하는 능력을 개선하는 것을 의미한다.
&lt;br /&gt;
어떻게 개선하는 능력을 개선하는 시스템을 갖추는가가는 우리의 사고방식과 조직내 상호작용이 중요하다고 이 책은 제시하고 있습니다.
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;애자일을 실행할 때&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;아이디어를 공유하는 방식은 세심하게 설계되어야 개인간의 시기와 경쟁이라는 부작용을 피할 수 있다.&lt;/li&gt;
  &lt;li&gt;팀내의 심리적 안정감이 중요하다. 의견개진이나 실수등에 의해서 비난받지 않는 환경조성이 필요하다.&lt;/li&gt;
  &lt;li&gt;일을 개인이 각각 하는 것보다 팀별로 하면 문제 해결에 대해 팀원이 그 해결안을 공유할 수 있고, 서로 도와주기 때문에 업무도 빨리 마무리할 수 있게 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
팀웍과 애자일에 관심있다면 추천하고 싶은 책입니다.
&lt;br /&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 02 Oct 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2019/10/02/Review-of-book-way-to-agile</link>
        <guid isPermaLink="true">http://localhost:4000/2019/10/02/Review-of-book-way-to-agile</guid>
      </item>
    
      <item>
        <title>VSCODE에서 Python VirtualEnv 실행하기</title>
        <description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Visual Studio Code에서 VirtualEnv를 설정하고 Code Runner로 실행합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;프로젝트를 생성하고자 하는 디렉토리를 만든 후 그 디렉토리 내에서 VSCODE를 실행합니다.&lt;/p&gt;

&lt;p&gt;VSCODE의 Extension을 클릭하여 Code runner를 설치합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2019-09-30/vscode1.jpeg&quot; alt=&quot;vscode1.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ctrl + alt+ n&lt;/code&gt; 을 누르면 해당 python 파일을 실행합니다. 이 경우에는 시스템에서 default로 설정된 python으로 실행이 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2019-09-30/vscode2.jpeg&quot; alt=&quot;vscode2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Terminal &amp;gt; New Terminal&lt;/code&gt;로 터미널을 연 후 다음과 같이 가상환경을 설정합니다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-linux&quot;&gt;# MacOS/Linux
python3 -m venv .venv

# Windows
pip install virtualenv
virtualenv .venv 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2019-09-30/vscode3.jpeg&quot; alt=&quot;vscode3.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;VSCODE에서 맥에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;command + shift + p&lt;/code&gt;, 윈도에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ctrl + shift + p&lt;/code&gt;를 눌러 command palette에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python&amp;gt;Select Interpreter&lt;/code&gt;를 선택합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(.venv':venv)&lt;/code&gt;인 python을 선택합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2019-09-30/vscode4.jpeg&quot; alt=&quot;vscode4.jpeg&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;이제 Code Runner에 VirtaulEnv의 python을 설정합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;프로젝트폴더 &amp;gt; .vscode &amp;gt; settings.json&lt;/code&gt;을 다음과 같이 저장한 후, VSCODE를 재실행합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MacOS/Linux&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;python.pythonPath&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.venv/bin/python&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;git.ignoreLimitWarning&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;code-runner.executorMap&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;python&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$pythonPath $fullFileName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Windows 10&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;python.pythonPath&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.venv&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Scripts&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;python.exe&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;git.ignoreLimitWarning&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;code-runner.executorMap&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;python&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$pythonPath $fullFileName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;test.py에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ctrl + alt+ n&lt;/code&gt; 을 누르면 virtualenv환경에서 실행되는 것을 확인할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2019-09-30/vscode5.jpeg&quot; alt=&quot;vscode5.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Terminal옆의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;+&lt;/code&gt;버튼을 누르면 VirtualEnv으로 전환됩니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;윈도10에서는 terminal을 powershell이 아닌 cmd를 선택해야 가상환경이 activate됩니다. 
terminal &amp;gt; select default shell &amp;gt; Command prompt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;/images/posts/2019-09-30/vscode6.jpeg&quot; alt=&quot;vscode6.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이후 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip install 패키지명&lt;/code&gt;으로 원하는 패키지를 install하면 됩니다.&lt;/p&gt;

&lt;hr /&gt;

</description>
        <pubDate>Mon, 30 Sep 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2019/09/30/How-to-exectue-Python-VirtualEnv-in-VSCODE</link>
        <guid isPermaLink="true">http://localhost:4000/2019/09/30/How-to-exectue-Python-VirtualEnv-in-VSCODE</guid>
      </item>
    

    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    

  </channel>
</rss>